{
  "name": "ngrok",
  "version": "0.1.98",
  "description": "node wrapper for ngrok",
  "main": "index.js",
  "scripts": {
    "test": "node ./node_modules/mocha/bin/_mocha",
    "postinstall": "node ./postinstall.js",
    "postupdate": "node ./postinstall.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bubenshchykov/ngrok.git"
  },
  "keywords": [
    "ngrok",
    "localhost",
    "tunneling",
    "localtunnel",
    "webhook"
  ],
  "author": {
    "name": "bubenshchykov"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/bubenshchykov/ngrok/issues"
  },
  "devDependencies": {
    "mocha": "~1.14.0",
    "chai": "~1.8.1",
    "request": "~2.27.0"
  },
  "dependencies": {
    "decompress-zip": "0.0.7"
  },
  "bin": {
    "ngrok": "./bin/ngrok"
  },
  "readme": "ngrok [![Build Status](https://travis-ci.org/bubenshchykov/ngrok.png?branch=master)](https://travis-ci.org/bubenshchykov/ngrok)\n=====\n\n![alt ngrok.com](https://ngrok.com/static/img/overview.png)\n\nNgrok exposes your localhost to the web. https://ngrok.com/\n\nusage\n===\n\n[![NPM](https://nodei.co/npm/ngrok.png?global=true&&downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/ngrok/)\n\nIt will download the ngrok binary for your platform and put it into the bin folder. You can also install ngrok globally and use it directly from bash\n```shell\n$ npm install ngrok -g\n$ ngrok 8080\n```\n\n## basic\n\n```javascript\nvar ngrok = require('ngrok');\n\nngrok.connect(8080, function (err, url) {\n\t// https://757c1652.ngrok.com -> 127.0.0.1:8080 \n});\n```\n## subdomain\n```javascript\nngrok.connect({\n\tauthtoken: 'your-token',\n\tsubdomain: 'susanna',\n\tport: 8080\n}, function (err, url) {\n\t// https://susanna.ngrok.com -> 127.0.0.1:8080\n});\n```\n\n## http auth\n```javascript\nngrok.connect({\n\tauthtoken: 'your-token',\n\thttpauth: 'user:pwd'\n\tport: 8080\n}, function (err, url) {\n\t// https://757c1652.ngrok.com -> 127.0.0.1:8080 with http auth required\n});\n```\n\n## tcp\n```javascript\nngrok.connect({\n\t// http is the default protocol (and you should use it for the https\n\t// support) but tcp will work for everything else.\n\tauthtoken: 'your-token',\n\tproto: 'tcp',\n\tport: 5672\n}, function (err, url) {\n\t// tcp://abcd.ngrok.com:60234 -> 127.0.0.1:5762\n});\n```\n\n## disconnect\nThe tunnel will be killed when node process is done. For manual shutdown use\n```javascript\nngrok.disconnect();\n```\n## emitter\n\nAlso you can use ngrok as an event emitter, it fires \"connect\", \"disconnect\" and \"error\" events\n```javascript\nngrok.once('connect', function (url) {\n\tconsole.log('got a tunnel url', url);\n});\n\nngrok.connect(port);\n```\n\n## inspector\nWhen tunnel is established you can use the ngrok interface http://127.0.0.1:4040 to inspect the webhooks done via ngrok.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/bubenshchykov/ngrok",
  "_id": "ngrok@0.1.98",
  "_from": "ngrok@^0.1.98"
}
